<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Fantasy Draft Tracker (No-React GitHub Pages Safe)</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <!-- Only CSS dependency -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    :root {
      --bg:#121416; --panel:#1a1f24; --line:#27323a; --text:#eaf3f8; --muted:#a9bfcb;
      --chip:#203039; --chip-border:#385562;
    }
    html,body { height:100%; }
    body { background:var(--bg); color:var(--text); -webkit-font-smoothing:antialiased; }
    .navbar { border-bottom:1px solid var(--line); }
    .panel { background:var(--panel); border:1px solid var(--line); border-radius:12px; padding:12px; }
    .card { background:var(--panel); border:1px solid var(--line); color:var(--text); }
    .muted { color:var(--muted); }
    .money { font-weight:700; }
    .band { font-weight:700; border-radius:6px; padding:2px 8px; margin-right:6px; display:inline-block }
    .band.high { background:#28a745; color:#fff; }
    .band.medium { background:#ffc107; color:#111; }
    .band.low { background:#6ea8fe; color:#081028; }
    .band.other { background:#6c757d; color:#fff; }
    .drafted-row { opacity:.55; filter:grayscale(.25); }
    .drafted-chip { background:var(--chip); border:1px dashed var(--chip-border); color:#d6eef7; border-radius:999px; padding:2px 8px; font-size:.85rem; display:inline-block }
    .btn-chip { background:#1f2a30; color:#e6f7ff; border:1px solid #37515c; border-radius:999px; padding:4px 10px; }
    .btn-chip.active { background:#2a885d; border-color:#2a885d; }
    .collapsible-hint { color:#9ab1ba; font-size:.95rem; }
    a.navlink { color:#e6f7ff; text-decoration:none; }
    a.navlink.active { font-weight:700; text-decoration:underline; text-underline-offset:3px; }
    .hidden { display:none !important; }
  </style>
</head>
<body>
  <nav class="navbar navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#" id="brand">Fantasy Draft Tracker</a>
      <div class="d-flex gap-3">
        <a href="#draft" id="nav-draft" class="navlink active">Draft</a>
        <a href="#managers" id="nav-managers" class="navlink">Managers</a>
        <a href="#settings" id="nav-settings" class="navlink">Settings</a>
      </div>
    </div>
  </nav>

  <main class="container py-3">
    <!-- DRAFT PAGE -->
    <section id="page-draft" class="page">
      <div class="panel mb-3">
        <div class="d-flex justify-content-between align-items-center">
          <h5 class="m-0">Draft — Available Players</h5>
          <input id="search" type="search" class="form-control" style="max-width: 280px;" placeholder="Search player / team / pos…">
        </div>
      </div>

      <div id="players-grid" class="row g-3"></div>

      <div class="panel mt-3">
        <div class="d-flex justify-content-between align-items-center mb-2">
          <h5 class="m-0">Drafted</h5>
          <div class="d-flex gap-2">
            <button class="btn-chip" data-view="last3" id="btn-last3">Last 3</button>
            <button class="btn-chip" data-view="last10" id="btn-last10">Last 10</button>
            <button class="btn-chip" data-view="all" id="btn-all">All</button>
            <button class="btn-chip hidden" id="btn-collapse">Collapse</button>
          </div>
        </div>
        <div id="drafted-collapsed-hint" class="collapsible-hint">Select Last 3 / Last 10 / All to expand</div>
        <ul id="drafted-list" class="list-group hidden"></ul>
      </div>
    </section>

    <!-- MANAGERS PAGE -->
    <section id="page-managers" class="page hidden">
      <div class="panel mb-3">
        <h5 class="m-0">Managers Overview</h5>
      </div>
      <div class="panel">
        <div class="table-responsive">
          <table class="table table-dark table-striped table-bordered align-middle m-0">
            <thead>
              <tr><th>Manager</th><th>Players</th><th>Spent $</th></tr>
            </thead>
            <tbody id="managers-tbody"></tbody>
          </table>
        </div>
      </div>
    </section>

    <!-- SETTINGS PAGE -->
    <section id="page-settings" class="page hidden">
      <div class="panel">
        <h5>Settings</h5>
        <div class="muted">(CSV uploads, roster sizes, league toggles can go here in your full version.)</div>
      </div>
    </section>
  </main>

  <script>
  // ---------- Simple State (no frameworks) ----------
  const state = {
    players: [
      { name:"Ja'Marr Chase", teamAbbr:"CIN", pos:"WR", rank:1, bye:10 },
      { name:"Bijan Robinson", teamAbbr:"ATL", pos:"RB", rank:2, bye:5 },
      { name:"Patrick Mahomes", teamAbbr:"KC", pos:"QB", rank:1, bye:6 },
      { name:"Amon-Ra St. Brown", teamAbbr:"DET", pos:"WR", rank:3, bye:8 },
      { name:"Jahmyr Gibbs", teamAbbr:"DET", pos:"RB", rank:4, bye:8 }
    ],
    managers: ["My Team", "Alice", "Bob", "Carol"],
    drafted: [],                 // {name,pos,rank,teamAbbr,bye,manager,cost,ts}
    draftedView: 'collapsed',    // 'collapsed' | 'last3' | 'last10' | 'all'
    search: ''
  };

  // ---------- Helpers ----------
  function rankBand(rank){
    if(rank==null) return 'other';
    if(rank<=10) return 'high';
    if(rank<=20) return 'medium';
    if(rank<=30) return 'low';
    return 'other';
  }
  function money(val){ return Number(val||0).toFixed(2); }

  // ---------- Rendering ----------
  function render(){
    renderNav();
    renderPlayers();
    renderDraftedPanel();
    renderManagers();
  }

  function renderNav(){
    const hash = (location.hash || '#draft').toLowerCase();
    document.querySelectorAll('.page').forEach(sec => sec.classList.add('hidden'));
    document.querySelector('#nav-draft').classList.toggle('active', hash==='#draft');
    document.querySelector('#nav-managers').classList.toggle('active', hash==='#managers');
    document.querySelector('#nav-settings').classList.toggle('active', hash==='#settings');

    if(hash==='#managers') document.querySelector('#page-managers').classList.remove('hidden');
    else if(hash==='#settings') document.querySelector('#page-settings').classList.remove('hidden');
    else document.querySelector('#page-draft').classList.remove('hidden');
  }

  function renderPlayers(){
    const grid = document.getElementById('players-grid');
    grid.innerHTML = '';
    const q = state.search.trim().toLowerCase();

    const filtered = state.players
      .filter(p => !q || p.name.toLowerCase().includes(q) || p.pos.toLowerCase().includes(q) || p.teamAbbr.toLowerCase().includes(q))
      .sort((a,b)=>{
        const ad = !!a.draftedBy, bd = !!b.draftedBy;
        if(ad !== bd) return ad ? 1 : -1; // undrafted first
        return (a.rank||9999) - (b.rank||9999);
      });

    for(const p of filtered){
      const col = document.createElement('div');
      col.className = 'col-12 col-md-6 col-xl-4';

      const card = document.createElement('div');
      card.className = 'card p-3 ' + (p.draftedBy ? 'drafted-row' : '');
      col.appendChild(card);

      const head = document.createElement('div');
      head.className = 'd-flex align-items-center justify-content-between mb-1';
      card.appendChild(head);

      const titleWrap = document.createElement('div');
      head.appendChild(titleWrap);

      const title = document.createElement('div');
      const band = document.createElement('span');
      band.className = 'band ' + rankBand(p.rank);
      band.textContent = '#' + (p.rank ?? '—');
      title.appendChild(band);
      const strong = document.createElement('strong');
      strong.textContent = p.name;
      title.appendChild(strong);
      titleWrap.appendChild(title);

      const sub = document.createElement('div');
      sub.className = 'muted';
      sub.textContent = `${p.pos} • ${p.teamAbbr}` + (p.bye ? ` • Bye ${p.bye}` : '');
      titleWrap.appendChild(sub);

      const body = document.createElement('div');
      card.appendChild(body);

      if(p.draftedBy){
        const chip = document.createElement('div');
        chip.className = 'drafted-chip mt-1';
        chip.textContent = `Drafted by ${p.draftedBy} • $${money(p.draftCost)}`;
        body.appendChild(chip);
      } else {
        // Quick draft controls
        const row = document.createElement('div');
        row.className = 'd-flex gap-2 align-items-center';
        body.appendChild(row);

        const input = document.createElement('input');
        input.type = 'number';
        input.min = '0.5';
        input.step = '0.5';
        input.placeholder = '$';
        input.className = 'form-control form-control-sm';
        input.style.maxWidth = '90px';
        row.appendChild(input);

        const sel = document.createElement('select');
        sel.className = 'form-select form-select-sm';
        sel.style.maxWidth = '160px';
        for(const m of state.managers){
          const o = document.createElement('option');
          o.value = m; o.textContent = m;
          sel.appendChild(o);
        }
        row.appendChild(sel);

        const btn = document.createElement('button');
        btn.className = 'btn btn-sm btn-success';
        btn.textContent = 'Draft';
        btn.onclick = () => {
          const amt = parseFloat(input.value);
          if(isNaN(amt) || amt < 0.5 || ((amt*2)%1)!==0){ btn.blur(); return; }
          quickDraft(p, amt, sel.value);
        };
        row.appendChild(btn);
      }

      grid.appendChild(col);
    }
  }

  function renderDraftedPanel(){
    const hint = document.getElementById('drafted-collapsed-hint');
    const list = document.getElementById('drafted-list');
    const btnCollapse = document.getElementById('btn-collapse');

    if(state.draftedView === 'collapsed'){
      hint.classList.remove('hidden');
      list.classList.add('hidden');
      btnCollapse.classList.add('hidden');
      list.innerHTML = '';
      return;
    }

    // Expanded:
    hint.classList.add('hidden');
    list.classList.remove('hidden');
    btnCollapse.classList.remove('hidden');

    const sorted = [...state.drafted].sort((a,b)=> b.ts - a.ts);
    let shown = sorted;
    if(state.draftedView === 'last3') shown = sorted.slice(0,3);
    if(state.draftedView === 'last10') shown = sorted.slice(0,10);

    list.innerHTML = '';
    if(shown.length === 0){
      const li = document.createElement('li');
      li.className = 'list-group-item bg-dark text-light';
      li.textContent = 'No picks yet';
      list.appendChild(li);
      return;
    }

    for(const d of shown){
      const li = document.createElement('li');
      li.className = 'list-group-item bg-dark text-light d-flex justify-content-between align-items-center';
      const left = document.createElement('span');
      const b = document.createElement('span');
      b.className = 'band ' + rankBand(d.rank);
      b.textContent = (d.rank!=null?('#'+d.rank):'—');
      left.appendChild(b);
      left.appendChild(document.createTextNode(' ' + d.name + ' (' + d.pos + (d.teamAbbr? ' • '+d.teamAbbr : '') + (d.bye? ' • Bye '+d.bye : '') + ')'));
      const right = document.createElement('span');
      right.textContent = `${d.manager} — $${money(d.cost)}`;
      li.appendChild(left);
      li.appendChild(right);
      list.appendChild(li);
    }
  }

  function renderManagers(){
    const tbody = document.getElementById('managers-tbody');
    if(!tbody) return;
    tbody.innerHTML = '';
    for(const m of state.managers){
      const mine = state.drafted.filter(d => d.manager === m);
      const spent = mine.reduce((a,c)=> a+(c.cost||0), 0);
      const tr = document.createElement('tr');
      tr.innerHTML = `<td>${m}</td><td>${mine.length}</td><td>${money(spent)}</td>`;
      tbody.appendChild(tr);
    }
  }

  // ---------- Actions ----------
  function quickDraft(player, cost, manager){
    // Add to drafted log
    state.drafted.push({
      name:player.name, pos:player.pos, rank:player.rank, teamAbbr:player.teamAbbr, bye:player.bye,
      manager, cost:Number(cost), ts: Date.now()
    });
    // Grey out in players list
    const idx = state.players.findIndex(p => p.name===player.name && p.teamAbbr===player.teamAbbr);
    if(idx !== -1){
      state.players[idx].draftedBy = manager;
      state.players[idx].draftCost = Number(cost);
    }
    render();
  }

  // ---------- Events ----------
  window.addEventListener('hashchange', renderNav);
  document.getElementById('search').addEventListener('input', (ev)=>{
    state.search = ev.target.value;
    renderPlayers();
  });

  document.getElementById('btn-last3').addEventListener('click', ()=>{ state.draftedView='last3'; renderDraftedPanel(); });
  document.getElementById('btn-last10').addEventListener('click', ()=>{ state.draftedView='last10'; renderDraftedPanel(); });
  document.getElementById('btn-all').addEventListener('click', ()=>{ state.draftedView='all'; renderDraftedPanel(); });
  document.getElementById('btn-collapse').addEventListener('click', ()=>{ state.draftedView='collapsed'; renderDraftedPanel(); });

  // ---------- Init ----------
  if(!location.hash) location.hash = '#draft';
  render();
  </script>
</body>
</html>
